name: CI/CD

env:
  BOARD: orangepizero
  BRANCH: current
  RELEASE: focal
  LANG: pt_BR.UTF-8

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache apt packages
        uses: actions/cache@v2
        with:
          path: |
            /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('/var/lib/dpkg/status') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Setup dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git dialog lsb-release binutils debootstrap

      - name: Cache Armbian Build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Clone Armbian Build
        run: |
          if [ ! -d "build" ]; then
            git clone https://github.com/armbian/build.git
          fi

      - name: Copy customize-image.sh
        run: cp -r userpatches build/

      - name: Set file permissions
        run: |
          chmod +x build/userpatches/customize-image.sh
          chmod +x build/compile.sh

      - name: Build Armbian image
        run: |
          cd build
          ./compile.sh \
          BOARD=$BOARD \
          BRANCH=$BRANCH \
          BUILD_DESKTOP=no \
          BUILD_MINIMAL=yes \
          KERNEL_CONFIGURE=no \
          RELEASE=$RELEASE \
          DEST_LANG=$LANG

      - name: Upload Armbian image
        uses: actions/upload-artifact@v2
        with:
          name: Armbian-Image
          path: build/output/images/

  release:
    needs: build_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Armbian image
        uses: actions/download-artifact@v2
        with:
          name: Armbian-Image
          path: build/output/images/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: Release ${{ steps.create_tag.outputs.tag }}
          body: |
            Changes in this Release
            - Automated build of Armbian image for Orange Pi Zero

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/output/images/${{ steps.get_image_name.outputs.image_name }}
          asset_name: ${{ steps.get_image_name.outputs.image_name }}
          asset_content_type: application/octet-stream
